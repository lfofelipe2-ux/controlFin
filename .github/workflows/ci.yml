name: CI - Continuous Integration

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main, develop]

jobs:
  # Frontend CI
  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./controlfin-frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './controlfin-frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Run tests
        run: npm run test:coverage || echo "No tests yet - skipping"
        continue-on-error: true

      - name: Build application
        run: npm run build

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        continue-on-error: true
        with:
          file: ./controlfin-frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  # Backend CI
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./controlfin-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './controlfin-backend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: ESLINT_USE_FLAT_CONFIG=false npm run lint

      - name: Type check
        run: npm run type-check

      - name: Run tests
        run: npm run test:coverage || echo "No tests yet - skipping"
        continue-on-error: true

      - name: Build application
        run: npm run build

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        continue-on-error: true
        with:
          file: ./controlfin-backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Frontend security audit
        run: |
          cd controlfin-frontend
          npm audit --audit-level=moderate

      - name: Backend security audit
        run: |
          cd controlfin-backend
          npm audit --audit-level=moderate

  # Build matrix (test multiple Node versions)
  build-matrix:
    name: Build Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20', '22']
        project: ['frontend', 'backend']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './controlfin-${{ matrix.project }}/package-lock.json'

      - name: Install dependencies
        run: |
          cd controlfin-${{ matrix.project }}
          npm ci

      - name: Build application
        run: |
          cd controlfin-${{ matrix.project }}
          npm run build
