name: CD - Continuous Deployment

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

jobs:
  # Deploy Frontend to Vercel
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    environment: production
    needs: [] # No dependencies for now

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './controlfin-frontend/package-lock.json'

      - name: Install dependencies
        run: |
          cd controlfin-frontend
          npm ci

      - name: Build application
        run: |
          cd controlfin-frontend
          npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./controlfin-frontend
          vercel-args: '--prod'

  # Deploy Backend to Render
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    environment: production
    needs: [] # No dependencies for now

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './controlfin-backend/package-lock.json'

      - name: Install dependencies
        run: |
          cd controlfin-backend
          npm ci

      - name: Build application
        run: |
          cd controlfin-backend
          npm run build

      - name: Deploy to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

  # Health check after deployment
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]

    steps:
      - name: Wait for deployment
        run: sleep 60

      - name: Check Frontend
        run: |
          curl -f ${{ secrets.FRONTEND_URL }}/health || exit 1

      - name: Check Backend
        run: |
          curl -f ${{ secrets.BACKEND_URL }}/health || exit 1
