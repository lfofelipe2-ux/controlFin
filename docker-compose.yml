version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: controlfin-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: controlfin
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - controlfin-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: controlfin-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/controlfin?authSource=admin
      JWT_SECRET: your_jwt_secret_here
      JWT_EXPIRES_IN: 15m
      REFRESH_TOKEN_SECRET: your_refresh_token_secret_here
      REFRESH_TOKEN_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:5173
      ALLOWED_ORIGINS: http://localhost:5173,http://localhost:3000
    depends_on:
      - mongodb
    networks:
      - controlfin-network
    volumes:
      - ./logs:/app/logs

  # Frontend (Development)
  frontend:
    build:
      context: ./controlfin-frontend
      dockerfile: Dockerfile
    container_name: controlfin-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_BASE_URL: http://localhost:3000/api
      VITE_GOOGLE_CLIENT_ID: your_google_client_id
    depends_on:
      - backend
    networks:
      - controlfin-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: controlfin-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - controlfin-network

volumes:
  mongodb_data:
    driver: local

networks:
  controlfin-network:
    driver: bridge
