# Multi-stage build for production
FROM node:22-alpine AS base

# Install curl for health checks
RUN apk add --no-cache curl

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY controlfin-frontend/package*.json ./controlfin-frontend/
COPY controlfin-backend/package*.json ./controlfin-backend/

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Build stage
FROM base AS builder
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY controlfin-frontend/package*.json ./controlfin-frontend/
COPY controlfin-backend/package*.json ./controlfin-backend/

# Install all dependencies (including dev dependencies)
RUN npm ci

# Copy source code
COPY . .

# Build frontend
WORKDIR /app/controlfin-frontend
RUN npm run build

# Build backend
WORKDIR /app/controlfin-backend
RUN npm run build

# Production stage
FROM base AS runner
WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built applications
COPY --from=builder --chown=nextjs:nodejs /app/controlfin-frontend/dist ./controlfin-frontend/dist
COPY --from=builder --chown=nextjs:nodejs /app/controlfin-backend/dist ./controlfin-backend/dist

# Copy package files
COPY --from=deps --chown=nextjs:nodejs /app/package*.json ./
COPY --from=deps --chown=nextjs:nodejs /app/controlfin-frontend/package*.json ./controlfin-frontend/
COPY --from=deps --chown=nextjs:nodejs /app/controlfin-backend/package*.json ./controlfin-backend/

# Install production dependencies in runner stage
RUN npm ci --only=production
WORKDIR /app/controlfin-frontend
RUN npm ci --only=production
WORKDIR /app/controlfin-backend
RUN npm ci --only=production
WORKDIR /app

# Create logs directory
RUN mkdir -p /app/logs && chown nextjs:nodejs /app/logs

# Create uploads directory
RUN mkdir -p /app/uploads && chown nextjs:nodejs /app/uploads

# Create backups directory
RUN mkdir -p /app/backups && chown nextjs:nodejs /app/backups

# Switch to non-root user
USER nextjs

# Expose ports
EXPOSE 3000 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

# Start the application
CMD ["npm", "run", "start:production"]

